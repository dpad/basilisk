[build-system]
# Requirements for calling setuptools
requires = [
    "setuptools>=64",  # For PEP 660 (Allow editable installs from pyproject.toml)
    "setuptools-scm>=8.0",  # Automatically include all Git-controlled files in sdist

    # Requirements for building Basilisk through setuptools and conanfile
    "conan>=2.0.5",
    "cmake>=3.18",
    "parse>=1.18.0",
    "swig>=4.2.0.post0"  # Requires https://github.com/nightlark/swig-pypi/pull/120
]

# Use setuptools to build everything.
build-backend = "setuptools.build_meta"

[project]
name        = 'Basilisk'
dynamic     = ["version"]
requires-python = ">=3.8"

readme      = "README.md"
license     = {file = "LICENSE"}
description = "Basilisk: an Astrodynamics Simulation Framework"

dependencies = [
    # Requirements for Basilisk
    "pandas",
    "numpy",
    "matplotlib",
    "Pillow",
    "colorama",
    'tqdm',
]

[project.urls]
homepage = 'https://hanspeterschaub.info/basilisk/'

[project.optional-dependencies]
test = [
    'pytest',
    'flake8',
    'pytest-cov',
    'hypothesis',
    'pytest-xdist',
    'pytest-random-order',
]

[tool.setuptools.dynamic]
version = {file = "docs/source/bskVersion.txt" }

[tool.cibuildwheel]
# Don't build individual architectures for Mac, or on musllinux, or on Pypy.
skip = ["*macosx_x86_64", "*macosx_arm64", "*-musllinux*", "pp*"]

# Run simple build test
test-command = [
    "ctest -C Release --test-dir {project}/dist3"
]

# Build using the future-compatible manylinux_2_28 image.
manylinux-x86_64-image = "manylinux_2_28"

# Always clean build with opNav and automatically install requirements (libgtk)
environment = { CONAN_ARGS = "-o clean=True -o opNav=True -c tools.system.package_manager:mode=install" }

# Only compile on 64-bit architectures for now.
# TODO: Do we need to compile for 32-bit?
[tool.cibuildwheel.linux]
archs = "auto64"
[tool.cibuildwheel.windows]
archs = "auto64"

[tool.cibuildwheel.macos]
# Forcibly enable cross-compiling for both architectures in universal2
archs = ["universal2", "x86_64", "arm64"]
